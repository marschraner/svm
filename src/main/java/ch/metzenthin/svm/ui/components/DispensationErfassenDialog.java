package ch.metzenthin.svm.ui.components;

import ch.metzenthin.svm.common.SvmContext;
import ch.metzenthin.svm.domain.model.DispensationErfassenModel;
import ch.metzenthin.svm.domain.model.DispensationenModel;
import ch.metzenthin.svm.domain.model.SchuelerDatenblattModel;
import ch.metzenthin.svm.ui.componentmodel.DispensationenTableModel;
import ch.metzenthin.svm.ui.control.DispensationErfassenController;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;

public class DispensationErfassenDialog extends JDialog {
    private JPanel contentPane;
    private JPanel datenPanel;
    private JPanel buttonPanel;
    private JTextField txtDispensationsbeginn;
    private JTextField txtDispensationsende;
    private JTextField txtVoraussichtlicheDauer;
    private JTextField txtGrund;
    private JButton btnAbbrechen;
    private JButton btnSpeichern;
    private JLabel errLblDispensationsbeginn;
    private JLabel errLblDispensationsende;
    private JLabel errLblVoraussichtlicheDauer;
    private JLabel errLblGrund;

    public DispensationErfassenDialog(SvmContext svmContext, DispensationenTableModel dispensationenTableModel, DispensationenModel dispensationenModel, SchuelerDatenblattModel schuelerDatenblattModel, int indexBearbeiten, boolean isBearbeiten, String title) {
        setContentPane(contentPane);
        setModal(true);
        setTitle(title);
        initializeErrLbls();
        createDispensationErfassenController(svmContext, dispensationenTableModel, dispensationenModel, schuelerDatenblattModel, indexBearbeiten, isBearbeiten);
    }

    private void initializeErrLbls() {
        errLblDispensationsbeginn.setVisible(false);
        errLblDispensationsbeginn.setForeground(Color.RED);
        errLblDispensationsende.setVisible(false);
        errLblDispensationsende.setForeground(Color.RED);
        errLblVoraussichtlicheDauer.setVisible(false);
        errLblVoraussichtlicheDauer.setForeground(Color.RED);
        errLblGrund.setVisible(false);
        errLblGrund.setForeground(Color.RED);
    }

    private void createDispensationErfassenController(SvmContext svmContext, DispensationenTableModel dispensationenTableModel, DispensationenModel dispensationenModel, SchuelerDatenblattModel schuelerDatenblattModel, int indexBearbeiten, boolean isBearbeiten) {
        DispensationErfassenModel dispensationErfassenModel = (isBearbeiten ? dispensationenModel.getDispensationErfassenModel(svmContext, schuelerDatenblattModel, indexBearbeiten) : svmContext.getModelFactory().createDispensationErfassenModel());
        DispensationErfassenController dispensationErfassenController = new DispensationErfassenController(svmContext, dispensationenTableModel, dispensationErfassenModel, schuelerDatenblattModel);
        dispensationErfassenController.setDispensationErfassenDialog(this);
        dispensationErfassenController.setContentPane(contentPane);
        dispensationErfassenController.setTxtDispensationsbeginn(txtDispensationsbeginn);
        dispensationErfassenController.setTxtDispensationsende(txtDispensationsende);
        dispensationErfassenController.setTxtVoraussichtlicheDauer(txtVoraussichtlicheDauer);
        dispensationErfassenController.setTxtGrund(txtGrund);
        dispensationErfassenController.setBtnSpeichern(btnSpeichern);
        dispensationErfassenController.setBtnAbbrechen(btnAbbrechen);
        dispensationErfassenController.setErrLblDispensationsbeginn(errLblDispensationsbeginn);
        dispensationErfassenController.setErrLblDispensationsende(errLblDispensationsende);
        dispensationErfassenController.setErrLblVoraussichtlicheDauer(errLblVoraussichtlicheDauer);
        dispensationErfassenController.setErrLblGrund(errLblGrund);
        dispensationErfassenController.constructionDone();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new BorderLayout(0, 0));
        datenPanel = new JPanel();
        datenPanel.setLayout(new GridBagLayout());
        contentPane.add(datenPanel, BorderLayout.CENTER);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(10, 10, 10, 10);
        datenPanel.add(panel1, gbc);
        panel1.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Dispensation", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font(panel1.getFont().getName(), Font.BOLD, panel1.getFont().getSize()), new Color(-16777216)));
        final JLabel label1 = new JLabel();
        label1.setText("Dispensationsbeginn");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(label1, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel1.add(spacer2, gbc);
        final JPanel spacer3 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(spacer3, gbc);
        final JPanel spacer4 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel1.add(spacer4, gbc);
        final JPanel spacer5 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.ipadx = 300;
        panel1.add(spacer5, gbc);
        txtDispensationsbeginn = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(txtDispensationsbeginn, gbc);
        errLblDispensationsbeginn = new JLabel();
        errLblDispensationsbeginn.setText("errLblDispensationsbeginn");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(errLblDispensationsbeginn, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Dispensationsende");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 5;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(label2, gbc);
        txtDispensationsende = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 5;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(txtDispensationsende, gbc);
        final JPanel spacer6 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 6;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel1.add(spacer6, gbc);
        errLblDispensationsende = new JLabel();
        errLblDispensationsende.setText("errLblDispensationsende");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(errLblDispensationsende, gbc);
        final JLabel label3 = new JLabel();
        label3.setText("Voraussichtliche Dauer");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 8;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(label3, gbc);
        txtVoraussichtlicheDauer = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 8;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(txtVoraussichtlicheDauer, gbc);
        errLblVoraussichtlicheDauer = new JLabel();
        errLblVoraussichtlicheDauer.setText("errLblVoraussichtlicheDauer");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 7;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(errLblVoraussichtlicheDauer, gbc);
        final JPanel spacer7 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 9;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel1.add(spacer7, gbc);
        final JLabel label4 = new JLabel();
        label4.setText("Grund");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 11;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(label4, gbc);
        txtGrund = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 11;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(txtGrund, gbc);
        errLblGrund = new JLabel();
        errLblGrund.setText("errLblGrund");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 10;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(errLblGrund, gbc);
        final JPanel spacer8 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 12;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel1.add(spacer8, gbc);
        final JPanel spacer9 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 8;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.ipadx = 10;
        panel1.add(spacer9, gbc);
        buttonPanel = new JPanel();
        buttonPanel.setLayout(new GridBagLayout());
        contentPane.add(buttonPanel, BorderLayout.SOUTH);
        btnSpeichern = new JButton();
        btnSpeichern.setMaximumSize(new Dimension(114, 29));
        btnSpeichern.setMinimumSize(new Dimension(114, 29));
        btnSpeichern.setPreferredSize(new Dimension(114, 29));
        btnSpeichern.setSelected(false);
        btnSpeichern.setText("Speichern");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.EAST;
        gbc.insets = new Insets(5, 5, 10, 5);
        buttonPanel.add(btnSpeichern, gbc);
        btnAbbrechen = new JButton();
        btnAbbrechen.setMaximumSize(new Dimension(114, 29));
        btnAbbrechen.setMinimumSize(new Dimension(114, 29));
        btnAbbrechen.setPreferredSize(new Dimension(114, 29));
        btnAbbrechen.setText("Abbrechen");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(5, 5, 10, 5);
        buttonPanel.add(btnAbbrechen, gbc);
        label1.setLabelFor(txtDispensationsbeginn);
        label2.setLabelFor(txtDispensationsende);
        label3.setLabelFor(txtVoraussichtlicheDauer);
        label4.setLabelFor(txtGrund);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }
}
