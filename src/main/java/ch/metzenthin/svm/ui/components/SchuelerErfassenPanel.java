package ch.metzenthin.svm.ui.components;

import ch.metzenthin.svm.common.SvmContext;
import ch.metzenthin.svm.domain.SchuelerModel;
import ch.metzenthin.svm.ui.control.CompletedListener;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;

/**
 * @author hans
 */
public class SchuelerErfassenPanel {
    private JPanel panel;
    private SchuelerPanel schuelerPanel;
    private final SchuelerModel schuelerModel;
    private ElternteilEinsPanel elternteilEinsPanel;
    private ElternteilZweiPanel elternteilZweiPanel;
    private DrittempfaengerPanel drittempfaengerPanel;
    private JPanel btnPanel;
    private JButton btnSpeichern;
    private JButton btnAbbrechen;
    private ActionListener closeListener;

    public SchuelerErfassenPanel(SvmContext svmContext) {
        $$$setupUI$$$();
        btnSpeichern.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                onSpeichern();
            }
        });
        btnAbbrechen.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                onAbbrechen();
            }
        });
        schuelerPanel.addCompletedListener(new CompletedListener() {
            @Override
            public void completed(boolean completed) {
                onSchuelerPanelCompleted(completed);
            }
        });
        schuelerModel = svmContext.getModelFactory().createSchuelerModel();
        schuelerPanel.setModel(schuelerModel);
        onSchuelerPanelCompleted(false);
    }

    public void addCloseListener(ActionListener actionListener) {
        closeListener = actionListener;
    }

    private void onSchuelerPanelCompleted(boolean completed) {
        System.out.println("SchuelerPanel completed=" + completed);
        btnSpeichern.setEnabled(completed);
    }

    private void onAbbrechen() {
        System.out.println("SchuelerErfassenPanel Abbrechen gedrückt");
        closeListener.actionPerformed(new ActionEvent(btnAbbrechen, ActionEvent.ACTION_PERFORMED, "Close nach Abbrechen"));
        // todo Dialog, ob wirklich abgebrochen werden soll
    }

    private void onSpeichern() {
        System.out.println("SchuelerErfassenPanel Speichern gedrückt");
        schuelerModel.save();
        // todo Dialog "erfolgreich gespeichert"
        closeListener.actionPerformed(new ActionEvent(btnSpeichern, ActionEvent.ACTION_PERFORMED, "Close nach Speichern"));
    }

    private void createUIComponents() {
        elternteilEinsPanel = new ElternteilEinsPanel();
        elternteilEinsPanel.addRechnungsempfaengerAdresseItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                onElternteilEinsRechnungsempfaenger(e);
            }
        });
        elternteilZweiPanel = new ElternteilZweiPanel();
        elternteilZweiPanel.addRechnungsempfaengerAdresseItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                onElternteilZweiRechnungsempfaenger(e);
            }
        });
        drittempfaengerPanel = new DrittempfaengerPanel();
        drittempfaengerPanel.addRechnungsempfaengerAdresseItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                onDrittempfaengerRechnungsempfaenger(e);
            }
        });
    }

    private void onElternteilEinsRechnungsempfaenger(ItemEvent e) {
        System.out.println("Elternteil 1 Rechnungsempfänger. selected=" + isSelected(e));
    }

    private void onElternteilZweiRechnungsempfaenger(ItemEvent e) {
        System.out.println("Elternteil 2 Rechnungsempfänger. selected=" + isSelected(e));
    }

    private void onDrittempfaengerRechnungsempfaenger(ItemEvent e) {
        System.out.println("Drittempfänger Rechnungsempfänger. selected=" + isSelected(e));
    }

    private boolean isSelected(ItemEvent e) {
        return e.getStateChange() == ItemEvent.SELECTED;
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        panel = new JPanel();
        panel.setLayout(new BorderLayout(0, 0));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        panel.add(panel1, BorderLayout.CENTER);
        schuelerPanel = new SchuelerPanel();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.NORTHWEST;
        panel1.add(schuelerPanel.$$$getRootComponent$$$(), gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel1.add(spacer2, gbc);
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        panel1.add(elternteilEinsPanel.$$$getRootComponent$$$(), gbc);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        panel1.add(elternteilZweiPanel.$$$getRootComponent$$$(), gbc);
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 2;
        panel1.add(drittempfaengerPanel.$$$getRootComponent$$$(), gbc);
        btnPanel = new JPanel();
        btnPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel.add(btnPanel, BorderLayout.SOUTH);
        btnSpeichern = new JButton();
        btnSpeichern.setText("Speichern");
        btnSpeichern.setMnemonic('S');
        btnSpeichern.setDisplayedMnemonicIndex(0);
        btnPanel.add(btnSpeichern);
        btnAbbrechen = new JButton();
        btnAbbrechen.setText("Abbrechen");
        btnAbbrechen.setMnemonic('A');
        btnAbbrechen.setDisplayedMnemonicIndex(0);
        btnPanel.add(btnAbbrechen);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }
}
